def __init__(self):
    self.__SERVICE_ARRAY = [0, 1, 0, -1, 0, 1, 0]  

def ConquestCampaign(N: int, M: int, L: int, battalion: list) -> int:
    neighbor = self.__SERVICE_ARRAY

// используется константа при инициализации объекта класса, в которой записан массив, на основании которого производится отбор соседних ячеек (согласно задаче). Константа может быть изменена при изменении логики отбора


def tests_one(self):
        self.assertEqual(ShopOLAP(5, ['платье 3', 'сумка1 4', 'сумка123 2', 'сумка 1', 'сумка2 3']), ['платье 3', 'сумка 1', 'сумка1 4', 'сумка123 2', 'сумка2 3'])

    def tests_two(self):
        self.assertEqual(ShopOLAP(5, ['платье1 5', 'сумка32 2', 'платье1 1', 'сумка23 2', 'сумка128 4']), ['платье1 6', 'сумка128 4', 'сумка23 2', 'сумка32 2'])

// для тестирования используется значения переменных, которые нужно менять на лету


r = int(input("Радиус окружности: "))
PI = 3.14
print("Периметр окружности:", 2 * PI * r)

// значение 3,14 связывается с переменной PI во время написания кода, в данном случае такой выбор сделан по причине того, что значение математической константы «пи» постоянно и не повлечет за собой необходимости менять это значение по тексту программы